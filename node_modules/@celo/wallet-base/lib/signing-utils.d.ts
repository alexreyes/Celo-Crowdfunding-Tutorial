/// <reference types="node" />
import { CeloTx, EncodedTransaction, RLPEncodedTx } from '@celo/connect';
import { EIP712TypedData } from '@celo/utils/lib/sign-typed-data-utils';
export declare const publicKeyPrefix: number;
export declare const sixtyFour: number;
export declare const thirtyTwo: number;
export declare function chainIdTransformationForSigning(chainId: number): number;
export declare function getHashFromEncoded(rlpEncode: string): string;
export declare function rlpEncodedTx(tx: CeloTx): RLPEncodedTx;
export declare function encodeTransaction(rlpEncoded: RLPEncodedTx, signature: {
    v: number;
    r: Buffer;
    s: Buffer;
}): Promise<EncodedTransaction>;
export declare function extractSignature(rawTx: string): {
    v: number;
    r: Buffer;
    s: Buffer;
};
export declare function recoverTransaction(rawTx: string): [CeloTx, string];
export declare function recoverMessageSigner(signingDataHex: string, signedData: string): string;
export declare function verifyEIP712TypedDataSigner(typedData: EIP712TypedData, signedData: string, expectedAddress: string): boolean;
export declare function verifySignatureWithoutPrefix(messageHash: string, signature: string, signer: string): boolean;
export declare function decodeSig(sig: any): {
    v: number;
    r: Buffer;
    s: Buffer;
};
