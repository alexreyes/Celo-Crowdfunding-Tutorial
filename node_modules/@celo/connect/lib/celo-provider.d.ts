import { Connection } from './connection';
import { Callback, JsonRpcPayload, JsonRpcResponse, Provider } from './types';
export declare function assertIsCeloProvider(provider: any): asserts provider is CeloProvider;
export declare class CeloProvider implements Provider {
    readonly existingProvider: Provider;
    readonly connection: Connection;
    private alreadyStopped;
    private nonceLock;
    constructor(existingProvider: Provider, connection: Connection);
    addAccount(privateKey: string): void;
    removeAccount(address: string): void;
    getAccounts(): Promise<string[]>;
    isLocalAccount(address?: string): boolean;
    /**
     * Send method as expected by web3.js
     */
    send(payload: JsonRpcPayload, callback: Callback<JsonRpcResponse>): void;
    stop(): void;
    private handleAccounts;
    private handleSignTypedData;
    private handleSignPersonalMessage;
    private handleSignTransaction;
    private handleSendTransaction;
    private forwardSend;
    private checkPayloadWithAtLeastNParams;
    private addProviderDelegatedFunctions;
    get connected(): any;
    supportsSubscriptions(): any;
    private defaultOn;
    private defaultOnce;
    private defaultRemoveListener;
    private defaultRemoveAllListeners;
    private defaultReset;
}
