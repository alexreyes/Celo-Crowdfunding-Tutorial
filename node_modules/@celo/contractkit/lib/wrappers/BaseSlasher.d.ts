import { CeloTxObject, Contract } from '@celo/connect';
import { BaseWrapper } from './BaseWrapper';
declare type TrailingSlasherParams = [number | string, string[], string[], Array<number | string>, string[], string[], Array<number | string>];
interface SlasherContract extends Contract {
    methods: {
        slash(...args: any): CeloTxObject<void>;
        slashingIncentives(): CeloTxObject<{
            penalty: string;
            reward: string;
        }>;
    };
}
export declare class BaseSlasher<T extends SlasherContract> extends BaseWrapper<T> {
    protected signerIndexAtBlock(address: string, blockNumber: number): Promise<number>;
    protected trailingSlashArgs(address: string, blockNumber: number): Promise<TrailingSlasherParams>;
    protected slash: (...args: Parameters<T["methods"]["slash"]>) => import("@celo/connect").CeloTransactionObject<void>;
    /**
     * Returns slashing incentives.
     * @return Rewards and penalties for slashing.
     */
    slashingIncentives: () => Promise<{
        reward: import("bignumber.js").default;
        penalty: import("bignumber.js").default;
    }>;
}
export {};
