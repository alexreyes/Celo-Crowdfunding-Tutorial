import 'bignumber.js';
import { GoldToken } from '../generated/GoldToken';
import { CeloTokenWrapper } from './CeloTokenWrapper';
/**
 * ERC-20 contract for Celo native currency.
 */
export declare class GoldTokenWrapper extends CeloTokenWrapper<GoldToken> {
    /**
     * Increases the allowance of another user.
     * @param spender The address which is being approved to spend CELO.
     * @param value The increment of the amount of CELO approved to the spender.
     * @returns true if success.
     */
    increaseAllowance: (args_0: string, args_1: import("bignumber.js").default.Value) => import("@celo/connect").CeloTransactionObject<boolean>;
    /**
     * Decreases the allowance of another user.
     * @param spender The address which is being approved to spend CELO.
     * @param value The decrement of the amount of CELO approved to the spender.
     * @returns true if success.
     */
    decreaseAllowance: (spender: string, value: string | number) => import("@celo/connect").CeloTransactionObject<boolean>;
    /**
     * Gets the balance of the specified address.
     * WARNING: The actual call to the Gold contract of the balanceOf:
     * `balanceOf = proxyCall(this.contract.methods.balanceOf, undefined, valueToBigNumber)`
     * has issues with web3. Keep the one calling getBalance
     * @param owner The address to query the balance of.
     * @return The balance of the specified address.
     */
    balanceOf: (account: string) => Promise<import("bignumber.js").default>;
}
