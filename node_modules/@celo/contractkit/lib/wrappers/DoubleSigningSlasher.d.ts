import { Address } from '@celo/connect';
import { DoubleSigningSlasher } from '../generated/DoubleSigningSlasher';
import { BaseSlasher } from './BaseSlasher';
/**
 * Contract handling slashing for Validator double-signing
 */
export declare class DoubleSigningSlasherWrapper extends BaseSlasher<DoubleSigningSlasher> {
    /**
     * Parses block number out of header.
     * @param header RLP encoded header
     * @return Block number.
     */
    getBlockNumberFromHeader(header: string): Promise<number>;
    /**
     * Slash a Validator for double-signing.
     * @param validatorAddress Validator to slash.
     * @param headerA First double signed block header.
     * @param headerB Second double signed block header.
     */
    slashValidator(validatorAddress: Address, headerA: string, headerB: string): Promise<import("@celo/connect").CeloTransactionObject<void>>;
    /**
     * Slash a Validator signer for double-signing.
     * @param signer Validator signer address to slash.
     * @param headerA First double signed block header.
     * @param headerB Second double signed block header.
     */
    slashSigner(signerAddress: Address, headerA: string, headerB: string): Promise<import("@celo/connect").CeloTransactionObject<void>>;
}
