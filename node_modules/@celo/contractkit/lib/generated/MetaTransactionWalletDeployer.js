"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ABI = [
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
            { indexed: true, internalType: 'address', name: 'wallet', type: 'address' },
            {
                indexed: false,
                internalType: 'address',
                name: 'implementation',
                type: 'address',
            },
        ],
        name: 'WalletDeployed',
        type: 'event',
    },
    {
        constant: true,
        inputs: [],
        name: 'getVersionNumber',
        outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        payable: false,
        stateMutability: 'pure',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { internalType: 'address', name: 'owner', type: 'address' },
            { internalType: 'address', name: 'implementation', type: 'address' },
            { internalType: 'bytes', name: 'initCallData', type: 'bytes' },
        ],
        name: 'deploy',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
function newMetaTransactionWalletDeployer(web3, address) {
    return new web3.eth.Contract(exports.ABI, address);
}
exports.newMetaTransactionWalletDeployer = newMetaTransactionWalletDeployer;
//# sourceMappingURL=MetaTransactionWalletDeployer.js.map